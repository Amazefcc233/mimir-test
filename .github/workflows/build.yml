name: Flutter_build

on: workflow_dispatch
permissions: write-all

env:
  flutter_version: '3.16.3'

jobs:
  build_android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

    #   - name: Change version info
    #     run: |
    #       python3 ./ios-build-tools/addBuildNumber.py

    #   - name: Install and set Flutter version
    #     uses: subosito/flutter-action@v2
    #     with:
    #       flutter-version: ${{ env.flutter_version }}
    #       channel: stable
    #       cache: true

    #   - name: Restore packages
    #     run: |
    #       flutter pub get

    #   - name: Build APK
    #     run: |
    #       flutter build apk

    #   - name: Sign APK
    #     uses: r0adkll/sign-android-release@v1
    #     with:
    #       releaseDirectory: build/app/outputs/flutter-apk
    #       signingKeyBase64: ${{ secrets.APK_SIGN_JKS_BASE64 }}
    #       alias: ${{ secrets.APK_SIGN_ALIAS }}
    #       keyStorePassword: ${{ secrets.APK_SIGN_PASS }}
    #       keyPassword: ${{ secrets.APK_SIGN_ALIAS_PASS }}

    #   - name: Rename APK file
    #     run: |
    #       cd build/app/outputs/flutter-apk/
    #       mv app-release-signed.apk SITLife-release-signed.apk
      
    #   - name: Cache APK
    #     id: cache-apk
    #     uses: actions/cache@v3
    #     with:
    #       path: |
    #         build/app/outputs/flutter-apk/
    #       key: build-apk
    #       enableCrossOsArchive: true
    #       restore-keys: |
    #         build-apk
      
    #   - name: Publish Android Artifact
    #     uses: actions/upload-artifact@v3
    #     with:
    #       name: SITLife-Android-release
    #       path: build/app/outputs/flutter-apk/SITLife-release-signed.apk

  build_ios:
    runs-on: macos-latest

    steps:
    - name: Checkout the code
      uses: actions/checkout@v3

    # - name: Change version info
    #   run: |
    #     python3 ./ios-build-tools/addBuildNumber.py

    # - name: Change Develop to Distribution
    #   run: |
    #     python3 ./ios-build-tools/toDistribution.py

    # - name: Install Apple Certificate
    #   uses: apple-actions/import-codesign-certs@v2
    #   with:
    #     p12-file-base64: ${{ secrets.P12_BASE64 }}
    #     p12-password: ${{ secrets.P12_PASSWORD }}

    # - name: Install the provisioning profile
    #   env:
    #     PROVISIONING_CERTIFICATE_BASE64: ${{ secrets.PROVISIONING_PROFILE_BASE64 }}
    #   run: |
    #     PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision

    #     echo -n "$PROVISIONING_CERTIFICATE_BASE64" | base64 --decode --output $PP_PATH

    #     mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
    #     cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

    # - name: Install and set Flutter version
    #   uses: subosito/flutter-action@v2
    #   with:
    #     flutter-version: ${{ env.flutter_version }}
    #     channel: stable
    #     cache: true

    # - name: Restore packages
    #   run: |
    #     flutter pub get

    # - name: Build iOS
    #   run: |
    #     flutter build ios --release --no-codesign

    # - name: Build resolve Swift dependencies
    #   run: |
    #     xcodebuild -resolvePackageDependencies -workspace ios/Runner.xcworkspace -scheme Runner -configuration Release

    # - name: Build xArchive
    #   run: |
    #     xcodebuild -workspace ios/Runner.xcworkspace -scheme Runner -configuration Release DEVELOPMENT_TEAM="M5APZD5CKA" -sdk 'iphoneos' -destination 'generic/platform=iOS' -archivePath build-output/app.xcarchive PROVISIONING_PROFILE="eb8b1f5f-3329-42a5-a18f-8254a2e85b41" clean archive CODE_SIGN_IDENTITY="Apple Distribution: ziqi wei"

    # - name: Export ipa
    #   run: |
    #     xcodebuild -exportArchive -archivePath build-output/app.xcarchive -exportPath build-output/ios -exportOptionsPlist ios/ExportOptions.plist

    # # Debug only
    # - name: cache ipa
    #   id: cache-ipa
    #   uses: actions/cache@v3
    #   with:
    #     path: |
    #       build-output/ios/
    #     key: build-ipa
    #     enableCrossOsArchive: true
    #     restore-keys: |
    #       build-ipa

    # - name: Publish iOS Artifact
    #   uses: actions/upload-artifact@v3
    #   with:
    #     name: SITLife-iOS-release
    #     path: build-output/ios

    # Release
    # - name: Deploy to App Store (Testflight)
    #   uses: apple-actions/upload-testflight-build@v1
    #   with:
    #     app-path: ${{ github.workspace }}/build-output/ios/life.mysit.SITLife.ipa
    #     issuer-id: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
    #     api-key-id: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
    #     api-private-key: ${{ secrets.APP_STORE_CONNECT_API_PRIVATE_KEY }}

  after_build:
    runs-on: ubuntu-latest
    needs: [build_android, build_ios]
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Change version info
        id: get_tag_name
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          python3 ./ios-build-tools/addBuildNumber.py ${{ github.server_url }} ${{ github.repository }} ${{ github.run_id }} ${{ github.run_attempt }}

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          branch: ${{ github.ref }}
      
      - name: Get Git info
        id: get_git_info
        run: |
          git fetch --tags
          echo "RESOLVED_VERSION="$(git tag | head -n 1) >> "$GITHUB_OUTPUT"
          echo "PREVIOUS_TAG="$(git tag | head -n 2 | tail -n 1) >> "$GITHUB_OUTPUT"

      - name: Prepare to restore
        run: |
          mkdir -p ~/builds/

      - name: Restore cache builds(apk)
        uses: actions/cache@v3
        with:
          path: |
            build/app/outputs/flutter-apk/
          key: build-apk
          enableCrossOsArchive: true

      
      - name: Restore cache builds(ipa)
        uses: actions/cache@v3
        with:
          path: |
            build-output/ios/   
          key: build-ipa
          enableCrossOsArchive: true
      
      - name: ls
        run: |
          ls ~/builds/
          echo '...'
          ls ~/
          cp -r build/app/outputs/flutter-apk/SITLife-release-signed.apk ~/builds/
          cp -r build-output/ios/life.mysit.SITLife.ipa ~/builds/
        # run: |
        #   mkdir -p ~/builds/
        #   cp -r build/app/outputs/flutter-apk/SITLife-release-signed.apk ~/builds/
        #   cp -r build-output/ios/life.mysit.SITLife.ipa ~/builds/
        
      - name: Release
        uses: softprops/action-gh-release@v1
        # env 取出先前步骤设定的 tag_name
        env:
            RESOLVED_VERSION: ${{ steps.get_git_info.outputs.RESOLVED_VERSION }}
            PREVIOUS_TAG: ${{ steps.get_git_info.outputs.PREVIOUS_TAG }}
        with:
          files: |
            ~/builds/*.apk
            ~/builds/*.ipa
          tag_name: ${{ env.RESOLVED_VERSION }}
          body: |
              ## 更新内容
              ### 新增功能
                - 新增了一些功能
              ### 优化内容
                - 优化了一些功能
              ### 修复内容
                - 修复了一些bug
              
              完整更新日志: https://github.com/${{ github.repository }}/compare/${{ env.PREVIOUS_TAG }}...${{ env.RESOLVED_VERSION }}
          draft: true
          prerelease: false
    
      - name: Delete cache builds
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          gh cache delete build-apk
          gh cache delete build-ipa
