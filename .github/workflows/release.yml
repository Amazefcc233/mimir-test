name: Flutter

on: workflow_dispatch
permissions: write-all

env:
  flutter_version: '3.16.1'

jobs:
  build_android:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v3
      
      - name: Change version info
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: |
          python3 ./ios-build-tools/addBuildNumber.py

      - name: Install and set Flutter version
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.flutter_version }}
          channel: stable
          cache: true

      - name: Restore packages
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --split-per-abi --target-platform android-arm64,android-x64,android-arm

      - uses: r0adkll/sign-android-release@v1
        name: Sign APK
        with:
          releaseDirectory: build/app/outputs/flutter-apk
          signingKeyBase64: ${{ secrets.APK_SIGN_JKS_BASE64 }}
          alias: ${{ secrets.APK_SIGN_ALIAS }}
          keyStorePassword: ${{ secrets.APK_SIGN_PASS }}
          keyPassword: ${{ secrets.APK_SIGN_ALIAS_PASS }}

      - name: ✏️ Rename apk file
        run: |
          cd build/app/outputs/flutter-apk/
          mv app-armeabi-v7a-release-signed.apk ${{ env.BRANCH_NAME }}-${{ env.SHA }}-armeabi-v7a-release-signed.apk
          mv app-arm64-v8a-release-signed.apk ${{ env.BRANCH_NAME }}-${{ env.SHA }}-arm64-v8a-release-signed.apk
          mv app-x86_64-release-signed.apk ${{ env.BRANCH_NAME }}-${{ env.SHA }}-x86_64-release-signed.apk

      - name: Upload android-x86_64 apk artifact File
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.BRANCH_NAME }}-${{ env.SHA }}-x86_64-release-signed.apk
          path: build/app/outputs/flutter-apk/${{ env.BRANCH_NAME }}-${{ env.SHA }}-x86_64-release-signed.apk

  build_ios:
    runs-on: macos-latest

    steps:
    - name: Checkout the code
      uses: actions/checkout@v3

    - name: Change version info
      env:
        ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      run: |
        python3 ./ios-build-tools/addBuildNumber.py
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"
        git add .
        git commit -m "Update build number"

    - name: Change Develop to Distribution
      run: |
        python3 ./ios-build-tools/toDistribution.py

    - name: Install Apple Certificate
      uses: apple-actions/import-codesign-certs@v1
      with:
        p12-file-base64: ${{ secrets.P12_BASE64 }}
        p12-password: ${{ secrets.P12_PASSWORD }}

    - name: Install the provisioning profile
      env:
        PROVISIONING_CERTIFICATE_BASE64: ${{ secrets.PROVISIONING_PROFILE_BASE64 }}
      run: |
        PP_PATH=$RUNNER_TEMP/build_pp.mobileprovision

        echo -n "$PROVISIONING_CERTIFICATE_BASE64" | base64 --decode --output $PP_PATH

        mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
        cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

    - name: Install and set Flutter version
      uses: subosito/flutter-action@v2
      with:
        flutter-version: ${{ env.flutter_version }}
        channel: stable
        cache: true

    - name: Restore packages
      run: flutter pub get

    - name: Build Flutter
      run: flutter build ios --release --no-codesign

    - name: Build resolve Swift dependencies
      run: xcodebuild -resolvePackageDependencies -workspace ios/Runner.xcworkspace -scheme Runner -configuration Release

    - name: Build xArchive
      run: |
        xcodebuild -workspace ios/Runner.xcworkspace -scheme Runner -configuration Release DEVELOPMENT_TEAM="M5APZD5CKA" -sdk 'iphoneos' -destination 'generic/platform=iOS' -archivePath build-output/app.xcarchive PROVISIONING_PROFILE="6145142a-0edd-4eac-a77e-fff7d043e943" clean archive CODE_SIGN_IDENTITY="iPhone Distribution: ziqi wei"

    - name: Export ipa
      run: xcodebuild -exportArchive -archivePath build-output/app.xcarchive -exportPath build-output/ios -exportOptionsPlist ios/ExportOptions.plist
  
    - name: Publish iOS Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: release-ios
        path: build-output/ios

    # - name: Deploy to App Store (Testflight)
    #   uses: apple-actions/upload-testflight-build@v1
    #   with:
    #     app-path: ${{ github.workspace }}/build-output/ios/life.mysit.SITLife.ipa
    #     issuer-id: ${{ secrets.APP_STORE_CONNECT_ISSUER_ID }}
    #     api-key-id: ${{ secrets.APP_STORE_CONNECT_API_KEY_ID }}
    #     api-private-key: ${{ secrets.APP_STORE_CONNECT_API_PRIVATE_KEY }}

  after_build:
    runs-on: ubuntu-latest
    needs: [build_android, build_ios]
    steps:
      - name: Checkout the code
        uses: actions/checkout@v3

      - name: Change version info
        env:
          ACCESS_TOKEN: ${{ secrets.ACCESS_TOKEN }}
        run: |
          python3 ./ios-build-tools/addBuildNumber.py
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add .
          git commit -m "Update build number"
      
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
